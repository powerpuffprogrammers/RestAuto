package messageController;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.net.ServerSocket;
import java.net.Socket;

//LAST CODED BY: CHRISTINA SEGERHOLM ON 2/24

import java.util.ArrayList;
import java.util.HashMap;

import configuration.Configure;
import databaseB.Dish;

/**
 * Starts the Message Controller - will handle ticket sends and message sends between tablets
 * @author cms17
 *
 */
public class MessageController extends Thread {
	
	private final static int portNumber = Configure.getPortNumber("MessageController");
	
	private Socket currListener;
	
	

	public MessageController(Socket listener) {
		currListener=listener;
	}

	public void run(){
		try {
			DataInputStream in = new DataInputStream(currListener.getInputStream());
			DataOutputStream out = new DataOutputStream(currListener.getOutputStream());
			while(true){
				String mess =in.readUTF();
				char first = mess.charAt(0);
				if(first=='L'){ //handle one message
					
				}
			}
			
			
		} catch (Exception e) {
			System.out.println("Disconnected from a client.");
			e.printStackTrace();
		} 
	}
	
	public static void main(String[] args){
		currentID=0;//or should we fetch this from the file?
		employeeList = new ArrayList<Employee>();
		menu = new HashMap<String, HashMap<String,Dish>>();
		
		
		try {
			ServerSocket server = new ServerSocket(portNumber);
			
			while(true){
				Socket listener = server.accept();
				Thread t= new DatabaseAController(listener);
				t.start();
			}
		} catch (Exception e) {
			System.out.println("ERROR: FAILED TO START SERVER.");
			e.printStackTrace();
		}
		
		
	}
	
	
}
